{"ast":null,"code":"import thunk from \"redux-thunk\";\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"remote-redux-devtools\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { sessionReducer } from \"./session/sessionReducer\";\nimport { env } from \"../configs\";\nvar rootReducer = combineReducers({\n  session: sessionReducer\n});\n\nvar makeStore = function makeStore(ctx) {\n  var devToolsEnhancer = composeWithDevTools({\n    realtime: env.NODE_ENV === \"dev\" ? true : false,\n    port: 8000,\n    hostname: \"localhost\"\n  });\n  var store = createStore(rootReducer, devToolsEnhancer(applyMiddleware(thunk)));\n  return store;\n};\n\nexport var wrapper = createWrapper(makeStore, {\n  debug: false\n});","map":{"version":3,"sources":["D:/Projet/MR-Schoom/front/src/redux/store.ts"],"names":["thunk","combineReducers","createStore","applyMiddleware","composeWithDevTools","createWrapper","sessionReducer","env","rootReducer","session","makeStore","ctx","devToolsEnhancer","realtime","NODE_ENV","port","hostname","store","wrapper","debug"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,aAAnC;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAAsE,OAAtE;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAAoBC,aAApB,QAAkD,oBAAlD;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,IAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,OAAO,EAAEH;AADyB,CAAD,CAAnC;;AAYA,IAAMI,SAA+B,GAAG,SAAlCA,SAAkC,CAACC,GAAD,EAAkB;AACxD,MAAMC,gBAAgB,GAAGR,mBAAmB,CAAC;AAC3CS,IAAAA,QAAQ,EAAEN,GAAG,CAACO,QAAJ,KAAiB,KAAjB,GAAyB,IAAzB,GAAgC,KADC;AAE3CC,IAAAA,IAAI,EAAE,IAFqC;AAG3CC,IAAAA,QAAQ,EAAE;AAHiC,GAAD,CAA5C;AAMA,MAAMC,KAAK,GAAGf,WAAW,CACvBM,WADuB,EAEvBI,gBAAgB,CAACT,eAAe,CAACH,KAAD,CAAhB,CAFO,CAAzB;AAIA,SAAOiB,KAAP;AACD,CAZD;;AAcA,OAAO,IAAMC,OAAO,GAAGb,aAAa,CAAYK,SAAZ,EAAuB;AAAES,EAAAA,KAAK,EAAE;AAAT,CAAvB,CAA7B","sourcesContent":["import thunk, { ThunkAction } from \"redux-thunk\";\r\nimport { combineReducers, createStore, applyMiddleware, Action } from \"redux\";\r\nimport { composeWithDevTools } from \"remote-redux-devtools\";\r\nimport { MakeStore, createWrapper, Context } from \"next-redux-wrapper\";\r\n\r\nimport { sessionReducer } from \"./session/sessionReducer\";\r\nimport { env } from \"../configs\";\r\n\r\nconst rootReducer = combineReducers({\r\n  session: sessionReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n\r\nconst makeStore: MakeStore<RootState> = (ctx: Context) => {\r\n  const devToolsEnhancer = composeWithDevTools({\r\n    realtime: env.NODE_ENV === \"dev\" ? true : false,\r\n    port: 8000,\r\n    hostname: \"localhost\",\r\n  });\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    devToolsEnhancer(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n};\r\n\r\nexport const wrapper = createWrapper<RootState>(makeStore, { debug: false });\r\n"]},"metadata":{},"sourceType":"module"}