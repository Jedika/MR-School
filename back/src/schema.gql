# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AnneeScolaire {
  debut: DateTime!
  fin: DateTime!
  id: ID!
}

input CreateEleveInput {
  matricule: String!
  naissance: DateTime!
  parent: ParentInput!
  sexe: String!
  utilisateur: UtilisateurInput!
}

input CreateParentInput {
  adresse: String!
  contact: String!
  mere: String!
  pere: String!
  tuteur: String!
}

input CreateResponsableInput {
  fonction: FonctionInput!
  utilisateur: UtilisateurInput!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Eleve {
  matricule: String!
  naissance: DateTime!
  parent: Parent!
  sexe: String!
  utilisateur: Utilisateur!
}

type Fonction {
  designation: String!
  id: ID!
}

input FonctionInput {
  designation: String!
}

input LoginInput {
  contact: String!
  motDePasse: String!
}

type Mutation {
  createEleve(input: CreateEleveInput!): Eleve!
  createFonction(input: FonctionInput!): Fonction!
  createParent(input: CreateParentInput!): Parent!
  createResponsable(input: CreateResponsableInput!): Responsable!
  login(input: LoginInput!): TokenDto!
  updateEleve(input: UpdateEleveInput!, matricule: String!): Eleve!
}

type Niveau {
  designation: String!
  id: ID!
}

type Parent {
  adresse: String!
  contact: String!
  id: ID!
  mere: String!
  pere: String!
  tuteur: String!
}

input ParentInput {
  adresse: String!
  contact: String!
  mere: String!
  pere: String!
  tuteur: String!
}

type Query {
  fonctionByDesignation(input: String!): Fonction!
  helloMrSchool: String!
  WhoAmI: Utilisateur!
}

type Responsable {
  fonctions: [Fonction!]!
  utilisateur: Utilisateur!
}

type Section {
  designation: String!
  id: ID!
}

type TokenDto {
  token: String
}

input UpdateEleveInput {
  matricule: String!
  naissance: DateTime!
  parent: ParentInput!
  sexe: String!
  utilisateur: UtilisateurInput!
}

type Utilisateur {
  adresse: String!
  contact: String!
  id: ID!
  motDePasse: String
  nom: String!
  photo: String
  prenom: String!
}

input UtilisateurInput {
  adresse: String!
  contact: String!
  motDePasse: String!
  nom: String!
  photo: String
  prenom: String!
}
